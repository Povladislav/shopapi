# Generated by Django 4.2.6 on 2023-11-03 00:01
import random

import django.core.validators
import django.db.models.deletion
from django.contrib.auth.models import User
from django.db import migrations, models


def populate_data(apps, schema_editor):
    employee = apps.get_model("admin", "Employee")
    factory = apps.get_model("admin", "Factory")
    distributor = apps.get_model("admin", "Distributor")
    dealer = apps.get_model("admin", "Dealer")
    individual = apps.get_model("admin", "Individual")
    retailer = apps.get_model("admin", "Retailer")
    product = apps.get_model("admin", "product")
    user = User.objects.create_superuser(
        username="root", password="root", email="root@gmail.com"
    )

    for k in range(1, 6):
        value = random.randint(1, 999)
        factory_created = factory.objects.create(
            name_of_manufacture=f"Factory{value}",
            created_at=f"2023-10-0{k}",
            email=f"factory{value}@gmail.com",
            country="France",
            city="Paris",
            street="randomstreet",
            number_of_house=value,
        )
        for i in range(random.randint(2, 10)):
            value = random.randint(1, 999)
            employee.objects.create(
                name=f"W_at_F{value}",
                position=f"Manager{value}",
                working_at=factory_created,
            )

        distributor_created = distributor.objects.create(
            name_of_manufacture=f"Distributor{value}",
            created_at=f"2023-10-0{k}",
            email=f"distributor{value}@gmail.com",
            country="Germany",
            city="Munic",
            street="randomstreet",
            provider=factory_created,
            number_of_house=value,
            debt=random.randint(0, 999),
        )
        for i in range(random.randint(2, 10)):
            value = random.randint(1, 999)
            employee.objects.create(
                name=f"W_at_D{value}",
                position=f"HR{value}",
                working_at=distributor_created,
            )
            product.objects.create(
                name=f"P_from_D{value}",
                model=f"Model{value}",
                data_of_issue=f"2023-10-0{k}",
                selling_at=distributor_created,
            )

        dealer_created = dealer.objects.create(
            name_of_manufacture=f"Dealer{value}",
            created_at=f"2023-10-0{k}",
            provider=distributor_created,
            email=f"dealer{value}@gmail.com",
            country="Belarus",
            city="Minsk",
            street="randomstreet",
            number_of_house=value,
            debt=random.randint(0, 999),
        )
        for i in range(random.randint(2, 10)):
            value = random.randint(1, 999)
            employee.objects.create(
                name=f"W_at_D{value}",
                position=f"Seller{value}",
                working_at=dealer_created,
            )
            product.objects.create(
                name=f"P_from_D{value}",
                model=f"Model{value}",
                data_of_issue=f"2023-10-0{k}",
                selling_at=dealer_created,
            )
        retailer_created = retailer.objects.create(
            name_of_manufacture=f"Retailer{value}",
            created_at=f"2023-10-0{k}",
            email=f"retailer{value}@gmail.com",
            country="Belarus",
            city="Minsk",
            street="randomstreet",
            provider=dealer_created,
            number_of_house=value,
            debt=random.randint(0, 999),
        )
        for i in range(random.randint(2, 10)):
            value = random.randint(1, 999)
            employee.objects.create(
                name=f"W_atR{value}",
                position=f"Worker{value}",
                working_at=retailer_created,
            )
            product.objects.create(
                name=f"P_from_R{value}",
                model=f"Model{value}",
                data_of_issue=f"2023-10-0{k}",
                selling_at=retailer_created,
            )

        individual_created = individual.objects.create(
            name_of_manufacture=f"Individual{value}",
            created_at=f"2023-10-0{k}",
            provider=retailer_created,
            email=f"individual{value}@gmail.com",
            country="Belarus",
            city="Minsk",
            street="randomstreet",
            number_of_house=value,
            debt=random.randint(0, 999),
        )
        for i in range(random.randint(2, 10)):
            value = random.randint(1, 999)
            employee.objects.create(
                name=f"W_at_I{value}",
                position=f"Worker{value}",
                working_at=individual_created,
            )
            product.objects.create(
                name=f"P_from_I{value}",
                model=f"Model{value}",
                data_of_issue=f"2023-10-0{k}",
                selling_at=individual_created,
            )


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Entity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_of_manufacture", models.CharField(max_length=50)),
                ("created_at", models.DateField(auto_now=True)),
                ("email", models.EmailField(max_length=254)),
                ("country", models.CharField(max_length=25)),
                ("city", models.CharField(max_length=25)),
                ("street", models.CharField(max_length=25)),
                (
                    "number_of_house",
                    models.SmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dealer",
            fields=[
                (
                    "entity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin.entity",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
            bases=("admin.entity",),
        ),
        migrations.CreateModel(
            name="Factory",
            fields=[
                (
                    "entity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin.entity",
                    ),
                ),
            ],
            bases=("admin.entity",),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("model", models.CharField(max_length=25)),
                ("data_of_issue", models.DateField()),
                (
                    "selling_at",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="admin.entity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("position", models.CharField(max_length=25)),
                (
                    "working_at",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employees",
                        to="admin.entity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Retailer",
            fields=[
                (
                    "entity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin.entity",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="retailer",
                        to="admin.dealer",
                    ),
                ),
            ],
            bases=("admin.entity",),
        ),
        migrations.CreateModel(
            name="Individual",
            fields=[
                (
                    "entity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin.entity",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="individual",
                        to="admin.retailer",
                    ),
                ),
            ],
            bases=("admin.entity",),
        ),
        migrations.CreateModel(
            name="Distributor",
            fields=[
                (
                    "entity_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="admin.entity",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="distributor",
                        to="admin.factory",
                    ),
                ),
            ],
            bases=("admin.entity",),
        ),
        migrations.AddField(
            model_name="dealer",
            name="provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dealer",
                to="admin.distributor",
            ),
        ),
        migrations.RunPython(populate_data),
    ]
